"""
효진이는 한번에 1칸 또는 2칸을 뛸 수 있다
칸이 총 4개 있을 떄
(1,1,1,1)
(1,2,1)
(1,1,2)
(2,1,1)
(2,2)
의 5가지 방법으로 멀리뛰기를 할 수 있다
멀리뛰기에 사용될 칸 n이 주어질 때, 끝에 도달하는 방법이 몇 가지인지 구해 출력하며,
이때 1234567을 나눈 나머지를 리턴한다
"""

def solution(n):
    d=[0]*(n+2)
    
    d[1]=1
    d[2]=2
    for i in range(3,n+1):
        d[i]=d[i-1]+d[i-2]
        
    return d[n]%1234567

answer=solution(4)
print(answer)

# dp로 해결하여 효율성을 높이고자 하였음
# (n-1칸, 1칸)*1 + (n-2칸,2칸)*1=n칸 의 경우의 수를 만들 수 있다는 것으로 접근
# (n-2칸,2칸)이 2가지가 아닌 1가지인 이유는, 이미 앞에서 1칸+1칸을 만들었기 때문이다